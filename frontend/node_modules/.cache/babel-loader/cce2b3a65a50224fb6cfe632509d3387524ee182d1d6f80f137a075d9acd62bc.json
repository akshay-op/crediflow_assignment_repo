{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import{Table,TableBody,TableCell,TableHead,TableHeader,TableRow}from\"../components/ui/table\";import{Select,SelectContent,SelectItem,SelectTrigger,SelectValue}from\"../components/ui/select\";// Function to convert JSON data to CSV format\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const convertToCSV=data=>{const keys=Object.keys(data[0]);const csvRows=[];// Add headers\ncsvRows.push(keys.join(','));// Add data rows\ndata.forEach(row=>{const values=keys.map(key=>{let value=row[key];if(typeof value==='string'&&value.includes(',')){// Remove commas from numbers represented as strings\nvalue=value.replace(/,/g,'');}return value;});csvRows.push(values.join(','));});return csvRows.join('\\n');};// Function to trigger the download\nconst downloadCSV=(data,fileName)=>{const csvData=convertToCSV(data);const blob=new Blob([csvData],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=fileName||'report.csv';a.click();window.URL.revokeObjectURL(url);};const ReportPage=()=>{const[selectedReport,setSelectedReport]=useState('');const[tableColumns,setTableColumns]=useState([]);const[reportData,setReportData]=useState({});const{state}=useLocation();const{myData}=state||{};useEffect(()=>{if(selectedReport&&myData[selectedReport]){const parsedData=JSON.parse(myData[selectedReport]);const columnsSet=new Set();if(Array.isArray(parsedData)){parsedData.forEach(item=>{Object.keys(item).forEach(key=>{if(key!==\"Particular\"){columnsSet.add(key);}});});}setTableColumns(Array.from(columnsSet));setReportData(parsedData);}},[selectedReport,myData]);// Function to handle nested objects (flatten or format them)\nconst formatCellValue=value=>{if(typeof value==='object'&&value!==null){return JSON.stringify(value,null,2);// Pretty print JSON object\n}return value!==null&&value!==void 0?value:\"-\";// Handle null or undefined\n};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-emerald-600 to-teal-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl md:text-4xl font-bold text-white mb-8\",children:\"Crediflow Report\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/95 rounded-lg shadow-xl p-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"max-w-md mb-8\",children:/*#__PURE__*/_jsxs(Select,{value:selectedReport,onValueChange:value=>setSelectedReport(value),children:[/*#__PURE__*/_jsx(SelectTrigger,{className:\"w-full\",children:/*#__PURE__*/_jsx(SelectValue,{placeholder:\"Select a report\"})}),/*#__PURE__*/_jsx(SelectContent,{children:myData&&Object.keys(myData).map(key=>/*#__PURE__*/_jsx(SelectItem,{value:key,children:key},key))})]})}),selectedReport&&reportData?/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHead,{children:\"Particular\"}),tableColumns.map(col=>/*#__PURE__*/_jsx(TableHead,{children:col},col))]})}),/*#__PURE__*/_jsx(TableBody,{children:Array.isArray(reportData)?reportData.map((row,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:row.Particular}),tableColumns.map(col=>/*#__PURE__*/_jsx(TableCell,{children:formatCellValue(row[col])},col))]},index)):/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:reportData.Particular}),tableColumns.map(col=>/*#__PURE__*/_jsx(TableCell,{children:formatCellValue(reportData[col])},col))]})})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-white\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No data available for the selected report.\"})}),reportData.length>0&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadCSV(reportData,'report.csv'),className:\"mt-4 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-700\",children:\"Download CSV\"})]})]})});};export default ReportPage;","map":{"version":3,"names":["React","useState","useEffect","useLocation","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","jsx","_jsx","jsxs","_jsxs","convertToCSV","data","keys","Object","csvRows","push","join","forEach","row","values","map","key","value","includes","replace","downloadCSV","fileName","csvData","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","ReportPage","selectedReport","setSelectedReport","tableColumns","setTableColumns","reportData","setReportData","state","myData","parsedData","JSON","parse","columnsSet","Set","Array","isArray","item","add","from","formatCellValue","stringify","className","children","onValueChange","placeholder","col","index","Particular","length","onClick"],"sources":["C:/Users/USER/Documents/works/crediflow/frontend/src/pages/report.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../components/ui/table\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../components/ui/select\";\r\n\r\n// Function to convert JSON data to CSV format\r\nconst convertToCSV = (data) => {\r\n  const keys = Object.keys(data[0]);\r\n  const csvRows = [];\r\n\r\n  // Add headers\r\n  csvRows.push(keys.join(','));\r\n\r\n  // Add data rows\r\n  data.forEach(row => {\r\n    const values = keys.map(key => {\r\n      let value = row[key];\r\n      if (typeof value === 'string' && value.includes(',')) {\r\n        // Remove commas from numbers represented as strings\r\n        value = value.replace(/,/g, '');\r\n      }\r\n      return value;\r\n    });\r\n    csvRows.push(values.join(','));\r\n  });\r\n\r\n  return csvRows.join('\\n');\r\n};\r\n\r\n// Function to trigger the download\r\nconst downloadCSV = (data, fileName) => {\r\n  const csvData = convertToCSV(data);\r\n  const blob = new Blob([csvData], { type: 'text/csv' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = fileName || 'report.csv';\r\n  a.click();\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\nconst ReportPage = () => {\r\n  const [selectedReport, setSelectedReport] = useState('');\r\n  const [tableColumns, setTableColumns] = useState([]);\r\n  const [reportData, setReportData] = useState({});\r\n  const { state } = useLocation();\r\n  const { myData } = state || {};\r\n\r\n  useEffect(() => {\r\n    if (selectedReport && myData[selectedReport]) {\r\n      const parsedData = JSON.parse(myData[selectedReport]);\r\n\r\n      const columnsSet = new Set();\r\n      if (Array.isArray(parsedData)) {\r\n        parsedData.forEach(item => {\r\n          Object.keys(item).forEach(key => {\r\n            if (key !== \"Particular\") {\r\n              columnsSet.add(key);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      setTableColumns(Array.from(columnsSet));\r\n      setReportData(parsedData);\r\n    }\r\n  }, [selectedReport, myData]);\r\n\r\n  // Function to handle nested objects (flatten or format them)\r\n  const formatCellValue = (value) => {\r\n    if (typeof value === 'object' && value !== null) {\r\n      return JSON.stringify(value, null, 2); // Pretty print JSON object\r\n    }\r\n    return value ?? \"-\"; // Handle null or undefined\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-emerald-600 to-teal-700\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-8\">Crediflow Report</h1>\r\n\r\n        <div className=\"bg-white/95 rounded-lg shadow-xl p-6\">\r\n          <div className=\"max-w-md mb-8\">\r\n            <Select value={selectedReport} onValueChange={(value) => setSelectedReport(value)}>\r\n              <SelectTrigger className=\"w-full\">\r\n                <SelectValue placeholder=\"Select a report\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {myData && Object.keys(myData).map((key) => (\r\n                  <SelectItem key={key} value={key}>\r\n                    {key}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {selectedReport && reportData ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Particular</TableHead>\r\n                    {tableColumns.map((col) => (\r\n                      <TableHead key={col}>{col}</TableHead>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {Array.isArray(reportData) ? (\r\n                    reportData.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{row.Particular}</TableCell>\r\n                        {tableColumns.map((col) => (\r\n                          <TableCell key={col}>\r\n                            {formatCellValue(row[col])}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell>{reportData.Particular}</TableCell>\r\n                      {tableColumns.map((col) => (\r\n                        <TableCell key={col}>\r\n                          {formatCellValue(reportData[col])}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center text-white\">\r\n              <p>No data available for the selected report.</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Download Button */}\r\n          {reportData.length > 0 && (\r\n            <button\r\n              onClick={() => downloadCSV(reportData, 'report.csv')}\r\n              className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-700\"\r\n            >\r\n              Download CSV\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}