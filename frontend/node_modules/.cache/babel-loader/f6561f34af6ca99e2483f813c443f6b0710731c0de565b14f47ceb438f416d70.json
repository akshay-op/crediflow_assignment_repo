{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\works\\\\crediflow\\\\frontend\\\\crediflow-frontend\\\\src\\\\pages\\\\upload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Card } from \"../components/ui/card\";\n// import { Button } from \"../components/ui/button\";\n// import { Upload } from \"lucide-react\";\n// import axios from 'axios';\n\n// const UploadPage = () => {\n//   const [file, setFile] = useState(null);\n\n//   const handleFileChange = (e) => {\n//     const selectedFile = e.target.files[0];\n//     setFile(selectedFile);\n//     console.log('File selected:', selectedFile);\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//     e.stopPropagation();\n//   };\n\n//   const handleDrop = (e) => {\n//     e.preventDefault();\n//     e.stopPropagation();\n//     const droppedFile = e.dataTransfer.files[0];\n//     setFile(droppedFile);\n//     console.log('File dropped:', droppedFile);\n//   };\n\n//   const handleUpload = async () => { // Make this function async\n//     if (!file) {\n//       alert('Please select a file first');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       // Replace with your Flask API endpoint\n//       const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log('File uploaded successfully:', response.data);\n//       alert('File uploaded successfully!');\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//       alert('Error uploading file');\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center p-4 md:p-8 bg-gradient-to-br from-emerald-600 to-teal-700\">\n//       <div className=\"w-full max-w-3xl text-center mb-8\">\n//         <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-2\">Crediflow report</h1>\n//       </div>\n\n//       <Card className=\"w-full max-w-xl p-6 md:p-8 shadow-2xl bg-white/95 rounded-3xl\">\n//         <div className=\"text-center mb-6\">\n//           <h2 className=\"text-2xl font-semibold text-emerald-700\">Upload File</h2>\n//         </div>\n\n//         <div \n//           className=\"border-2 border-dashed border-emerald-600/30 rounded-xl p-8 md:p-12 text-center cursor-pointer hover:border-emerald-600/50 transition-colors\"\n//           onDragOver={handleDragOver}\n//           onDrop={handleDrop}\n//           onClick={() => document.getElementById('fileInput').click()}\n//         >\n//           <input\n//             type=\"file\"\n//             id=\"fileInput\"\n//             className=\"hidden\"\n//             onChange={handleFileChange}\n//             accept=\".pdf,.doc,.docx,.txt\"\n//           />\n//           <Upload className=\"mx-auto h-12 w-12 text-emerald-600 mb-4\" />\n//           <p className=\"text-sm md:text-base text-gray-600 mb-2\">\n//             Drag and drop your file here or click to browse\n//           </p>\n//           <p className=\"text-xs text-gray-500\">\n//             {file ? file.name : 'Supported formats: PDF, DOC, DOCX, TXT'}\n//           </p>\n//         </div>\n\n//         {file && (\n//           <div className=\"mt-6 text-center\">\n//             <Button\n//               className=\"bg-emerald-600 hover:bg-emerald-700 text-white px-8\"\n//               onClick={() => console.log('Processing file:', file)}\n//             >\n//               Upload File\n//             </Button>\n//           </div>\n//         )}\n//       </Card>\n//     </div>\n//   );\n// };\n\n// export default UploadPage;\n\nimport React, { useState } from 'react';\nimport { Card } from \"../components/ui/card\";\nimport { Button } from \"../components/ui/button\";\nimport { Upload } from \"lucide-react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false); // Track if upload was successful\n  const navigate = useNavigate(); // <-- ADD THIS\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    console.log('File selected:', selectedFile);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFile = e.dataTransfer.files[0];\n    setFile(droppedFile);\n    console.log('File dropped:', droppedFile);\n  };\n  const handleUpload = async () => {\n    // Make this function async\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      // Replace with your Flask API endpoint\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded successfully:', response.data);\n      alert('File uploaded successfully!');\n      setUploadSuccess(true);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Error uploading file');\n    }\n  };\n\n  // const handleExtract = async () => {\n  //   try {\n  //     // const response = await axios.get('http://127.0.0.1:5000/start-process');\n  //     // console.log('Processing started successfully:', response.data);\n  //     // // Navigate to /report\n  //     // navigate('/report');\n  //     // navigate('/report', { state: { isProcessing: true } }); \n  //     navigate('/report', {\n  //       state: { \n  //         isProcessing: true,\n  //         fileName: file.name\n  //       }\n  //     });\n  //   } catch (error) {\n  //     console.error('Error starting process:', error);\n  //     alert('Error starting the extraction process');\n  //   }\n  // };\n\n  const handleExtract = async () => {\n    try {\n      setLoading(true);\n      console.log(\"f name:\", file.name);\n      // ðŸ‘‡ your API call here\n      const response = await fetch('http://127.0.0.1:5000/start-process', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // âœ… this is very important\n        },\n        body: JSON.stringify({\n          fileName: file.name\n        })\n      });\n      const data = await response.json();\n\n      // Handle your API response (maybe save data in context or localStorage)\n\n      // After successful API\n      navigate('/report');\n    } catch (error) {\n      console.error('Error during extraction:', error);\n      alert('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center p-4 md:p-8 bg-gradient-to-br from-emerald-600 to-teal-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl text-center mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl md:text-4xl font-bold text-white mb-2\",\n        children: \"Crediflow report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-xl p-6 md:p-8 shadow-2xl bg-white/95 rounded-3xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-emerald-700\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-emerald-600/30 rounded-xl p-8 md:p-12 text-center cursor-pointer hover:border-emerald-600/50 transition-colors\",\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n        onClick: () => document.getElementById('fileInput').click(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          className: \"hidden\",\n          onChange: handleFileChange,\n          accept: \".pdf,.doc,.docx,.txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          className: \"mx-auto h-12 w-12 text-emerald-600 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm md:text-base text-gray-600 mb-2\",\n          children: \"Drag and drop your file here or click to browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: file ? file.name : 'Supported formats: PDF, DOC, DOCX, TXT'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"bg-emerald-600 hover:bg-emerald-700 text-white px-8\",\n          onClick: handleUpload // Trigger the file upload when clicked\n          ,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"bg-teal-600 hover:bg-teal-700 text-white px-8\",\n          onClick: handleExtract,\n          children: \"Extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"VjJtjO3kJsrzc/U+0fj6Nzx50CE=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","Card","Button","Upload","axios","useNavigate","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","uploadSuccess","setUploadSuccess","navigate","loading","setLoading","handleFileChange","e","selectedFile","target","files","console","log","handleDragOver","preventDefault","stopPropagation","handleDrop","droppedFile","dataTransfer","handleUpload","alert","formData","FormData","append","response","post","headers","data","error","handleExtract","name","fetch","method","body","JSON","stringify","fileName","json","className","children","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onClick","document","getElementById","click","type","id","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/works/crediflow/frontend/crediflow-frontend/src/pages/upload.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { Card } from \"../components/ui/card\";\r\n// import { Button } from \"../components/ui/button\";\r\n// import { Upload } from \"lucide-react\";\r\n// import axios from 'axios';\r\n\r\n// const UploadPage = () => {\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const selectedFile = e.target.files[0];\r\n//     setFile(selectedFile);\r\n//     console.log('File selected:', selectedFile);\r\n//   };\r\n\r\n//   const handleDragOver = (e) => {\r\n//     e.preventDefault();\r\n//     e.stopPropagation();\r\n//   };\r\n\r\n//   const handleDrop = (e) => {\r\n//     e.preventDefault();\r\n//     e.stopPropagation();\r\n//     const droppedFile = e.dataTransfer.files[0];\r\n//     setFile(droppedFile);\r\n//     console.log('File dropped:', droppedFile);\r\n//   };\r\n\r\n//   const handleUpload = async () => { // Make this function async\r\n//     if (!file) {\r\n//       alert('Please select a file first');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('file', file);\r\n\r\n//     try {\r\n//       // Replace with your Flask API endpoint\r\n//       const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\r\n//         headers: {\r\n//           'Content-Type': 'multipart/form-data',\r\n//         },\r\n//       });\r\n//       console.log('File uploaded successfully:', response.data);\r\n//       alert('File uploaded successfully!');\r\n//     } catch (error) {\r\n//       console.error('Error uploading file:', error);\r\n//       alert('Error uploading file');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center justify-center p-4 md:p-8 bg-gradient-to-br from-emerald-600 to-teal-700\">\r\n//       <div className=\"w-full max-w-3xl text-center mb-8\">\r\n//         <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-2\">Crediflow report</h1>\r\n//       </div>\r\n      \r\n//       <Card className=\"w-full max-w-xl p-6 md:p-8 shadow-2xl bg-white/95 rounded-3xl\">\r\n//         <div className=\"text-center mb-6\">\r\n//           <h2 className=\"text-2xl font-semibold text-emerald-700\">Upload File</h2>\r\n//         </div>\r\n        \r\n//         <div \r\n//           className=\"border-2 border-dashed border-emerald-600/30 rounded-xl p-8 md:p-12 text-center cursor-pointer hover:border-emerald-600/50 transition-colors\"\r\n//           onDragOver={handleDragOver}\r\n//           onDrop={handleDrop}\r\n//           onClick={() => document.getElementById('fileInput').click()}\r\n//         >\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"fileInput\"\r\n//             className=\"hidden\"\r\n//             onChange={handleFileChange}\r\n//             accept=\".pdf,.doc,.docx,.txt\"\r\n//           />\r\n//           <Upload className=\"mx-auto h-12 w-12 text-emerald-600 mb-4\" />\r\n//           <p className=\"text-sm md:text-base text-gray-600 mb-2\">\r\n//             Drag and drop your file here or click to browse\r\n//           </p>\r\n//           <p className=\"text-xs text-gray-500\">\r\n//             {file ? file.name : 'Supported formats: PDF, DOC, DOCX, TXT'}\r\n//           </p>\r\n//         </div>\r\n\r\n//         {file && (\r\n//           <div className=\"mt-6 text-center\">\r\n//             <Button\r\n//               className=\"bg-emerald-600 hover:bg-emerald-700 text-white px-8\"\r\n//               onClick={() => console.log('Processing file:', file)}\r\n//             >\r\n//               Upload File\r\n//             </Button>\r\n//           </div>\r\n//         )}\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadPage;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Card } from \"../components/ui/card\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { Upload } from \"lucide-react\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UploadPage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false); // Track if upload was successful\r\n  const navigate = useNavigate(); // <-- ADD THIS\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    console.log('File selected:', selectedFile);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    setFile(droppedFile);\r\n    console.log('File dropped:', droppedFile);\r\n  };\r\n\r\n  const handleUpload = async () => { // Make this function async\r\n    if (!file) {\r\n      alert('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      // Replace with your Flask API endpoint\r\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('File uploaded successfully:', response.data);\r\n      alert('File uploaded successfully!');\r\n      setUploadSuccess(true);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Error uploading file');\r\n    }\r\n  };\r\n\r\n\r\n  // const handleExtract = async () => {\r\n  //   try {\r\n  //     // const response = await axios.get('http://127.0.0.1:5000/start-process');\r\n  //     // console.log('Processing started successfully:', response.data);\r\n  //     // // Navigate to /report\r\n  //     // navigate('/report');\r\n  //     // navigate('/report', { state: { isProcessing: true } }); \r\n  //     navigate('/report', {\r\n  //       state: { \r\n  //         isProcessing: true,\r\n  //         fileName: file.name\r\n  //       }\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.error('Error starting process:', error);\r\n  //     alert('Error starting the extraction process');\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleExtract = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"f name:\",file.name)\r\n      // ðŸ‘‡ your API call here\r\n      const response = await fetch('http://127.0.0.1:5000/start-process', {\r\n        method:'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',  // âœ… this is very important\r\n        },\r\n        body: JSON.stringify({\r\n          fileName: file.name,\r\n        }),\r\n      });\r\n      \r\n      \r\n      const data = await response.json();\r\n\r\n      // Handle your API response (maybe save data in context or localStorage)\r\n      \r\n      // After successful API\r\n      navigate('/report');\r\n    } catch (error) {\r\n      console.error('Error during extraction:', error);\r\n      alert('Something went wrong. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 md:p-8 bg-gradient-to-br from-emerald-600 to-teal-700\">\r\n      <div className=\"w-full max-w-3xl text-center mb-8\">\r\n        <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-2\">Crediflow report</h1>\r\n      </div>\r\n      \r\n      <Card className=\"w-full max-w-xl p-6 md:p-8 shadow-2xl bg-white/95 rounded-3xl\">\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-semibold text-emerald-700\">Upload File</h2>\r\n        </div>\r\n        \r\n        <div \r\n          className=\"border-2 border-dashed border-emerald-600/30 rounded-xl p-8 md:p-12 text-center cursor-pointer hover:border-emerald-600/50 transition-colors\"\r\n          onDragOver={handleDragOver}\r\n          onDrop={handleDrop}\r\n          onClick={() => document.getElementById('fileInput').click()}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            className=\"hidden\"\r\n            onChange={handleFileChange}\r\n            accept=\".pdf,.doc,.docx,.txt\"\r\n          />\r\n          <Upload className=\"mx-auto h-12 w-12 text-emerald-600 mb-4\" />\r\n          <p className=\"text-sm md:text-base text-gray-600 mb-2\">\r\n            Drag and drop your file here or click to browse\r\n          </p>\r\n          <p className=\"text-xs text-gray-500\">\r\n            {file ? file.name : 'Supported formats: PDF, DOC, DOCX, TXT'}\r\n          </p>\r\n        </div>\r\n\r\n        {file && (\r\n          <div className=\"mt-6 text-center\">\r\n            <Button\r\n              className=\"bg-emerald-600 hover:bg-emerald-700 text-white px-8\"\r\n              onClick={handleUpload}  // Trigger the file upload when clicked\r\n            >\r\n              Upload File\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Show Extract button after successful upload */}\r\n        {uploadSuccess && (\r\n          <div className=\"mt-6 text-center\">\r\n            <Button\r\n              className=\"bg-teal-600 hover:bg-teal-700 text-white px-8\"\r\n              onClick={handleExtract}\r\n            >\r\n              Extract\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n\r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}