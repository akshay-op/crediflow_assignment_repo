{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\works\\\\crediflow\\\\frontend\\\\crediflow-frontend\\\\src\\\\components\\\\ui\\\\table.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTable = ({\n  headers,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headers.map((header, index) => /*#__PURE__*/_jsxDEV(TableHead, {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: Object.values(row).slice(1).map((value, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: typeof value === 'number' && index === 1 ? `$${value}` : value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomTable;\nexport default CustomTable;\nvar _c;\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","jsxDEV","_jsxDEV","CustomTable","headers","data","className","children","map","header","index","fileName","_jsxFileName","lineNumber","columnNumber","row","Object","values","slice","value","id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/works/crediflow/frontend/crediflow-frontend/src/components/ui/table.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\n\r\nconst CustomTable = ({ headers, data }) => {\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            {headers.map((header, index) => (\r\n              <TableHead key={index}>{header}</TableHead>\r\n            ))}\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.id}>\r\n              {Object.values(row).slice(1).map((value, index) => (\r\n                <TableCell key={index}>\r\n                  {typeof value === 'number' && index === 1 ? `$${value}` : value}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTable;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,QAAQ,QACH,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EACzC,oBACEH,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BL,OAAA,CAACP,KAAK;MAAAY,QAAA,gBACJL,OAAA,CAACH,WAAW;QAAAQ,QAAA,eACVL,OAAA,CAACF,QAAQ;UAAAO,QAAA,EACNH,OAAO,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBR,OAAA,CAACJ,SAAS;YAAAS,QAAA,EAAcE;UAAM,GAAdC,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAC3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACdZ,OAAA,CAACN,SAAS;QAAAW,QAAA,EACPF,IAAI,CAACG,GAAG,CAAEO,GAAG,iBACZb,OAAA,CAACF,QAAQ;UAAAO,QAAA,EACNS,MAAM,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAACV,GAAG,CAAC,CAACW,KAAK,EAAET,KAAK,kBAC5CR,OAAA,CAACL,SAAS;YAAAU,QAAA,EACP,OAAOY,KAAK,KAAK,QAAQ,IAAIT,KAAK,KAAK,CAAC,GAAG,IAAIS,KAAK,EAAE,GAAGA;UAAK,GADjDT,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACZ;QAAC,GALWC,GAAG,CAACK,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACO,EAAA,GAzBIlB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}