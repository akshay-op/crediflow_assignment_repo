{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\works\\\\crediflow\\\\frontend\\\\crediflow-frontend\\\\src\\\\pages\\\\report.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../components/ui/table\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n// Mock API calls - replace these with actual API endpoints\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchOptions = async () => {\n  // Simulate API call\n  return [{\n    id: 1,\n    label: \"January 2025 Report\"\n  }, {\n    id: 2,\n    label: \"February 2025 Report\"\n  }, {\n    id: 3,\n    label: \"March 2025 Report\"\n  }];\n};\nconst fetchReportData = async reportId => {\n  if (!reportId) return [];\n  return [{\n    id: 1,\n    name: \"John Doe\",\n    amount: 1000,\n    status: \"Paid\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    amount: 2000,\n    status: \"Pending\"\n  }, {\n    id: 3,\n    name: \"Bob Johnson\",\n    amount: 1500,\n    status: \"Paid\"\n  }];\n};\nconst ReportPage = () => {\n  _s();\n  const [selectedReport, setSelectedReport] = useState(null);\n  const {\n    data: options = []\n  } = useQuery({\n    queryKey: ['reportOptions'],\n    queryFn: fetchOptions\n  });\n  const {\n    data: reportData = []\n  } = useQuery({\n    queryKey: ['reportData', selectedReport],\n    // queryFn: () => selectedReport ? fetchReportData(selectedReport) : [],\n    queryFn: () => fetchReportData(selectedReport),\n    enabled: !!selectedReport\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-emerald-600 to-teal-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl md:text-4xl font-bold text-white mb-8\",\n        children: \"Crediflow report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/95 rounded-lg shadow-xl p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md mb-8\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onValueChange: val => setSelectedReport(Number(val)),\n            children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n              className: \"w-full\",\n              children: /*#__PURE__*/_jsxDEV(SelectValue, {\n                placeholder: \"Select a report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n              children: options.map(option => /*#__PURE__*/_jsxDEV(SelectItem, {\n                value: option.id,\n                children: option.label\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), selectedReport && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: reportData.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"$\", row.amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPage, \"lOh5G4GjBj/h7TCjtObZoEax6KE=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = ReportPage;\nexport default ReportPage;\nvar _c;\n$RefreshReg$(_c, \"ReportPage\");","map":{"version":3,"names":["React","useState","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","useQuery","jsxDEV","_jsxDEV","fetchOptions","id","label","fetchReportData","reportId","name","amount","status","ReportPage","_s","selectedReport","setSelectedReport","data","options","queryKey","queryFn","reportData","enabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onValueChange","val","Number","placeholder","map","option","value","row","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/works/crediflow/frontend/crediflow-frontend/src/pages/report.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"../components/ui/select\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"../components/ui/table\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n\r\n// Mock API calls - replace these with actual API endpoints\r\nconst fetchOptions = async () => {\r\n  // Simulate API call\r\n  return [\r\n    { id: 1, label: \"January 2025 Report\" },\r\n    { id: 2, label: \"February 2025 Report\" },\r\n    { id: 3, label: \"March 2025 Report\" }\r\n  ];\r\n};\r\n\r\nconst fetchReportData = async (reportId) => {\r\n    if (!reportId) return [];\r\n    return [\r\n      { id: 1, name: \"John Doe\", amount: 1000, status: \"Paid\" },\r\n      { id: 2, name: \"Jane Smith\", amount: 2000, status: \"Pending\" },\r\n      { id: 3, name: \"Bob Johnson\", amount: 1500, status: \"Paid\" }\r\n    ];\r\n  };\r\n\r\nconst ReportPage = () => {\r\n  const [selectedReport, setSelectedReport] = useState(null);\r\n\r\n  const { data: options = [] } = useQuery({\r\n    queryKey: ['reportOptions'],\r\n    queryFn: fetchOptions\r\n  });\r\n\r\n  const { data: reportData = [] } = useQuery({\r\n    queryKey: ['reportData', selectedReport],\r\n    // queryFn: () => selectedReport ? fetchReportData(selectedReport) : [],\r\n    queryFn: () => fetchReportData(selectedReport),\r\n    enabled: !!selectedReport\r\n  });\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-emerald-600 to-teal-700\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl md:text-4xl font-bold text-white mb-8\">\r\n          Crediflow report\r\n        </h1>\r\n\r\n        <div className=\"bg-white/95 rounded-lg shadow-xl p-6\">\r\n          <div className=\"max-w-md mb-8\">\r\n            {/* <Select onValueChange={setSelectedReport}> */}\r\n            <Select onValueChange={(val) => setSelectedReport(Number(val))}>\r\n\r\n              <SelectTrigger className=\"w-full\">\r\n                <SelectValue placeholder=\"Select a report\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {options.map((option) => (\r\n                  <SelectItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          {selectedReport && (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Amount</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {reportData.map((row) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>${row.amount}</TableCell>\r\n                      <TableCell>{row.status}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}